/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package se.vc;

import java.io.File;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import se.vc.log.SELogFactory;
import ws.schild.jave.info.MultimediaInfo;
import ws.schild.jave.info.VideoSize;
import ws.schild.jave.progress.EncoderProgressListener;

public class App {
    private static final Logger LOG = Logger.getLogger(App.class.getName());
    private final static String LOG_CONFIG = "res/logging.properties";
    
    public static void main(String[] args) {
        SELogFactory.initLog(Level.INFO, LOG_CONFIG);
        LOG.log(Level.INFO, "Start video convert:");
        LOG.log(Level.INFO, "Command example: VideoConvert.exe file=C:\\\\MyVideo.avi format=mp4");
        LOG.log(Level.INFO, "Args={0}", Arrays.toString(args));
        Config config = loadConfig(args);
        if (config == null) {
            LOG.log(Level.WARNING, "Could not load config!");
            return;
        }
        LOG.log(Level.INFO, "Start to convert media, config={0}", config);
        try {
            File source = new File(config.getFile());
            MediaConverter mc = new MediaConverter();
            mc.setBitRate(config.getBitRate());
            mc.setFrameRate(config.getFrameRate());
            mc.setQuality(config.getQuality());
            if (config.getWidth() != null && config.getHeight() != null) {
                mc.setSize(new VideoSize(config.getWidth(), config.getHeight()));
            }
            mc.convert(source, config.getFormat(), new EncoderProgressListener() {
                @Override
                public void sourceInfo(MultimediaInfo info) {
                    LOG.log(Level.INFO, "Source info={0}", info);
                }
                
                @Override
                public void progress(int permil) {
                    int percent = permil / 10;
                    LOG.log(Level.INFO, "Media file conversion progress: {0}%", percent);
                }

                @Override
                public void message(String message) {
                    LOG.log(Level.INFO, "Message={0}", message);
                }
            
            });
        } catch (Exception e) {
            LOG.log(Level.SEVERE, "Could not convert video file! config=" + config, e);
        }
    }
    
    private static Config loadConfig(String[] args) {
        if (args == null || args.length <= 0)
            return null;
        Config cc = new Config();
        for (String s : args) {
            String[] vars = s.trim().split("=");
            if (vars.length <= 1)
                continue;
            String name = vars[0];
            String value = vars[1];
            if (name.equalsIgnoreCase("file")) {
                cc.setFile(value);
            } else if (name.equalsIgnoreCase("format")) {
                cc.setFormat(value);
            } else if (name.equalsIgnoreCase("frameRate")) {
                cc.setFrameRate(toInteger(name, value));
            } else if (name.equalsIgnoreCase("bitRate")) {
                cc.setBitRate(toInteger(name, value));
            } else if (name.equalsIgnoreCase("quality")) {
                cc.setQuality(toInteger(name, value));
            } else if (name.equalsIgnoreCase("width")) {
                cc.setWidth(toInteger(name, value));
            } else if (name.equalsIgnoreCase("height")) {
                cc.setHeight(toInteger(name, value));
            }
        }
        return cc;
    }
    
    private static Integer toInteger(String name, String value) {
        try {
            return Integer.parseInt(value);
        } catch (NumberFormatException e) {
            LOG.log(Level.WARNING, "Could not convert " + name + ", it must be a integer number. value=" + value, e);
        }
        return null;
    }
}
